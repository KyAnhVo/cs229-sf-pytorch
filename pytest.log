Test predictionGaussianKernel
xTest = [[1.0, 2.0, 3.0, 4.0, 5.0], [6.0, 7.0, 8.0, 9.0, 10.0], [11.0, 12.0, 13.0, 14.0, 15.0]]
xInputTest = [0.0, 2.0, 4.0, 6.0, 8.0]
gaussian kernel: [[0.1533549726009369], [1.3007297638978343e-05], [2.9578336485818217e-23]]
Exit test

----------------------------------------------------------------------------------------------------

Test trainingGaussianKernel
xTest = [[1.0, 2.0, 3.0, 4.0, 5.0], [6.0, 7.0, 8.0, 9.0, 10.0], [11.0, 12.0, 13.0, 14.0, 15.0]]
gaussian kernel: [[1.0, 1.6373770961308765e-07, 7.187781923264561e-28], [1.6373770961308765e-07, 1.0, 1.6373770961308765e-07], [7.187781923264561e-28, 1.6373770961308765e-07, 1.0]]
Exit test

----------------------------------------------------------------------------------------------------

Test gaussianKernel

1. test on 1d array
x1 = tensor([1., 2., 3., 4., 5.], device='cuda:0')
x2 = tensor([1., 3., 5., 7., 9.], device='cuda:0')
gaussian kernel: 0.023517746478319168

2. test on 2d array
x1 = tensor([[1.],
        [2.],
        [3.],
        [4.],
        [5.]], device='cuda:0')
x2 = tensor([[1.],
        [3.],
        [5.],
        [7.],
        [9.]], device='cuda:0')
gaussian kernel: 0.023517746478319168

----------------------------------------------------------------------------------------------------

